import {
  VToolbar,
  VToolbarTitle
} from "./chunk-VS3U6KSI.js";
import "./chunk-7KW4IE3D.js";
import "./chunk-4SHQDKRG.js";
import "./chunk-3QJ4FIRS.js";
import {
  makeVariantProps
} from "./chunk-2LWK32AA.js";
import "./chunk-OXBU7QOU.js";
import "./chunk-MIC25CL5.js";
import "./chunk-GZGPY2L5.js";
import "./chunk-57PPKCFW.js";
import "./chunk-5U45FKOS.js";
import "./chunk-4EYD3LQ4.js";
import "./chunk-ARN2IX64.js";
import "./chunk-CCLOXXQO.js";
import "./chunk-X44BGSSP.js";
import "./chunk-OBAWTKI7.js";
import {
  genericComponent,
  makeComponentProps,
  propsFactory,
  provideDefaults,
  useRender
} from "./chunk-4XFGX3OK.js";
import {
  createVNode,
  toRef
} from "./chunk-G4DFXOZZ.js";
import "./chunk-RSJERJUL.js";

// node_modules/vuetify/lib/components/VToolbar/VToolbarItems.mjs
var makeVToolbarItemsProps = propsFactory({
  ...makeComponentProps(),
  ...makeVariantProps({
    variant: "text"
  })
}, "v-toolbar-items");
var VToolbarItems = genericComponent()({
  name: "VToolbarItems",
  props: makeVToolbarItemsProps(),
  setup(props, _ref) {
    let {
      slots
    } = _ref;
    provideDefaults({
      VBtn: {
        color: toRef(props, "color"),
        height: "inherit",
        variant: toRef(props, "variant")
      }
    });
    useRender(() => {
      var _a;
      return createVNode("div", {
        "class": ["v-toolbar-items", props.class],
        "style": props.style
      }, [(_a = slots.default) == null ? void 0 : _a.call(slots)]);
    });
    return {};
  }
});
export {
  VToolbar,
  VToolbarItems,
  VToolbarTitle
};
//# sourceMappingURL=vuetify_lib_components_VToolbar_index__mjs.js.map
